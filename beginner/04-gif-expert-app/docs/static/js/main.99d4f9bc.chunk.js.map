{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","oldCategories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAgBzC,OACE,sBAAMC,SATa,SAAEC,GACrBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAAAS,GAAa,OAAKP,GAAL,mBAAmBO,OAC/CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAjBoB,SAAEP,GAC1BF,EAAeE,EAAEQ,OAAOF,a,QCGbG,EATY,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCLEK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACkCO,UAAWF,GAD7C,+DAEFG,MAAOR,GAFL,cAEfS,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATjB,kBAadY,GAbc,4CAAH,sDC2BLK,EAxBQ,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAmB1C,OAZAC,qBAAU,WAERjB,EAASC,GACNiB,MAAM,SAAAC,GACLH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAId,CAAEb,IAEEc,EDhB0BK,CAAcnB,GAAlCU,EAF0B,EAE/BJ,KAAaO,EAFkB,EAElBA,QAErB,OACE,qCACE,oBAAIjB,UAAU,oCAAd,SAAoDI,IAEpDa,GAAW,mBAAGjB,UAAU,2BAAb,wBAEX,qBAAKA,UAAU,YAAf,SAEIc,EAAOF,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEKA,GADCA,EAAIhB,aEiBP2B,EA9BM,WAAO,IAAD,EAEWzC,mBAAS,CAAC,cAFrB,mBAEnB0C,EAFmB,KAEP3C,EAFO,KASzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI2C,EAAWb,KAAK,SAAAR,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCnBpBsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.99d4f9bc.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = ( e ) => {\n    setInputValue( e.target.value );\n  };\n\n  const handleSubmit = ( e ) => {\n    e.preventDefault();\n    if ( inputValue.trim().length > 2 ) {\n      setCategories( oldCategories => [inputValue,...oldCategories] );\n      setInputValue('');\n    };\n  };\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input\n        type=\"text\"\n        value={ inputValue }\n        onChange={ handleInputChange }\n      />\n    </form>\n  )\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n};\n\n\nexport default AddCategory\n","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={ url } alt={ title} />\n      <p>{ title }</p>\n    </div>\n  )\n}\n\nexport default GifGridItem;\n","\nexport const getGifs = async( category ) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=10&api_key=SooI1bFqf5yRFCnMP3KbiG86ujVZvFSz`;\n  const resp = await fetch( url );\n  const { data } = await resp.json();\n\n  const gifs = data.map( img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  });\n\n  return gifs;\n};\n","import React, { useState, useEffect } from 'react'\nimport GifGridItem from './GifGridItem'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n\n  const { data:images, loading } = useFetchGifs( category );\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n    { loading && <p className=\"animate__animated__flash\">Loading...</p> }\n\n      <div className='card-grid'>\n        {\n          images.map( img => (\n            <GifGridItem\n            key={ img.id }\n            { ...img }\n            />\n          ))\n        }\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid;\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n\n    getGifs( category )\n      .then( imgs => {\n        setState({\n          data: imgs,\n          loading: false\n        });\n      });\n\n  }, [ category ]);\n\n  return state;\n\n};\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\nconst [ categories, setCategories ] = useState(['One Punch']);\n\n// const handleAdd = () => {\n//   // setCategories( [ ...categories, 'HunterxHunter' ] );\n//   setCategories( categories => [ ...categories, 'HunterxHunter' ] );\n// };\n\n  return(\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr />\n\n      <ol>\n        {\n          categories.map( category => (\n            <GifGrid\n              key={ category }\n              category={ category }\n            />\n          ))\n        }\n      </ol>\n    </>\n  )\n\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}